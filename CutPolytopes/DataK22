return rec(
  EXT := [ [ 1, 0, 0, 0, 0 ], [ 1, 1, 1, 0, 0 ], [ 1, 1, 1, 1, 1 ], [ 1, 0, 1, 0, 1 ], [ 1, 0, 1, 1, 0 ], [ 1, 0, 0, 1, 1 ], 
      [ 1, 1, 0, 0, 1 ], [ 1, 1, 0, 1, 0 ] ],
  GRP := Group( [ (5,7), (4,5)(7,8), (2,4)(6,8), (1,2)(3,6) ] ),
  LOrb := [ [ 1, 2, 4, 5 ] ],
  eRec := rec(
      CUT_info := rec(
          EXT := [ [ 1, 0, 0, 0, 0 ], [ 1, 1, 1, 0, 0 ], [ 1, 1, 1, 1, 1 ], [ 1, 0, 1, 0, 1 ], [ 1, 0, 1, 1, 0 ], 
              [ 1, 0, 0, 1, 1 ], [ 1, 1, 0, 0, 1 ], [ 1, 1, 0, 1, 0 ] ],
          GRP := Group( [ (1,2)(3,6)(4,7)(5,8), (4,8)(5,7), (2,6)(5,7), (2,8)(4,6) ] ) ),
      GRA := rec(
          adjacencies := [ [ 3, 4 ], [ 3, 4 ], [ 1, 2 ], [ 1, 2 ] ],
          autGroup := Group( [ (3,4), (1,2), (1,3)(2,4) ] ),
          group := Group( [ () ] ),
          isGraph := true,
          isSimple := true,
          order := 4,
          representatives := [ 1, 2, 3, 4 ],
          schreierVector := [ -1, -2, -3, -4 ] ),
      GRPedge := Group( [ (1,2)(3,4), (1,3)(2,4), (2,3) ] ),
      GRPvert := Group( [ (3,4), (1,2), (1,3)(2,4) ] ),
      ListEdges := [ [ 1, 3 ], [ 1, 4 ], [ 2, 3 ], [ 2, 4 ] ],
      ListSet := [ [  ], [ 1 ], [ 1, 2 ], [ 1, 2, 3 ], [ 1, 3 ], [ 2 ], [ 2, 3 ], [ 3 ] ],
      ListVect := [ [ 1, 0, 0, 0, 0 ], [ 1, 1, 1, 0, 0 ], [ 1, 1, 1, 1, 1 ], [ 1, 0, 1, 0, 1 ], [ 1, 0, 1, 1, 0 ], 
          [ 1, 0, 0, 1, 1 ], [ 1, 1, 0, 0, 1 ], [ 1, 1, 0, 1, 0 ] ],
      MET_info := rec(
          EXT := [ [ 0, -1, 1, 1, 1 ], [ 0, 1, -1, 1, 1 ], [ 0, 1, 1, -1, 1 ], [ 0, 1, 1, 1, -1 ], [ 2, -1, -1, -1, 1 ], 
              [ 2, -1, -1, 1, -1 ], [ 2, -1, 1, -1, -1 ], [ 2, 1, -1, -1, -1 ], [ 0, 1, 0, 0, 0 ], [ 1, -1, 0, 0, 0 ], 
              [ 0, 0, 1, 0, 0 ], [ 0, 0, 0, 1, 0 ], [ 1, 0, -1, 0, 0 ], [ 1, 0, 0, -1, 0 ], [ 0, 0, 0, 0, 1 ], [ 1, 0, 0, 0, -1 ] 
             ],
          GRP := Group( [ ( 1, 2)( 3, 5)( 4, 6)( 7, 8)( 9,10)(11,13), ( 1, 2)( 3, 4)( 5, 6)( 7, 8)( 9,11)(10,13)(12,15)(14,16), 
              ( 1, 3)( 2, 4)( 5, 7)( 6, 8)( 9,12)(10,14)(11,15)(13,16), ( 2, 3)( 6, 7)(11,12)(13,14) ] ) ) ) );
